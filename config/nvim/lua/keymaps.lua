-- vim:foldmethod=marker:foldlevel=0
require("helpers")
vim.keymap.set("n", "<C-h>", ":bnext<CR>")
vim.keymap.set("n", "<C-l>", ":bprev<CR>")
vim.keymap.set("n", "<M-l>", "<C-w>l")
vim.keymap.set("n", "<M-h>", "<C-w>h")
vim.keymap.set("n", "<M-k>", "<C-w>k")
vim.keymap.set("n", "<M-j>", "<C-w>j")
vim.keymap.set("t", "<M-l>", "<C-\\><C-n><C-w>l")
vim.keymap.set("t", "<M-h>", "<C-\\><C-n><C-w>h")
vim.keymap.set("t", "<M-k>", "<C-\\><C-n><C-w>k")
vim.keymap.set("t", "<M-j>", "<C-\\><C-n><C-w>j")
vim.keymap.set("t", "<M-space>", "<C-\\><C-n>")
vim.keymap.set("", "<up>", "<C-W>+")
vim.keymap.set("", "<down>", "<C-W>-")
vim.keymap.set("", "<left>", "3<C-W>>")
vim.keymap.set("", "<right>", "3<C-W><")
vim.keymap.set("n", "<M-=>", "<C-w>=")
vim.keymap.set("n", "<M-->", "<C-w>_")
vim.keymap.set("n", "<M-\\>", "<C-w><bar>")
vim.keymap.set("n", "<M-H>", "<C-w>H")
vim.keymap.set("n", "<M-J>", "<C-w>J")
vim.keymap.set("n", "<M-K>", "<C-w>K")
vim.keymap.set("n", "<M-L>", "<C-w>L")
vim.keymap.set("", "Y", "y$", { noremap = false })
vim.keymap.set("n", "U", "<C-r>")
vim.keymap.set({ "x", "v" }, "p", "pgvy", { noremap = false })
vim.keymap.set("n", "zJ", "zczjzo")
vim.keymap.set("n", "zK", "zczkzo")
vim.keymap.set("n", "gV", "`[v`]")
vim.keymap.set("n", "<M-c>", SwitchTheme)

vim.cmd("cabbrev split lua WindowSizeAwareSplit()")

vim.keymap.set("n", "<M-space>", function()
  if vim.g.use_telescope then
    vim.cmd(":Telescope")
  else
    vim.cmd(":FzfLua")
  end
end)

MapWinCmd("t", "terminal")
MapWinCmd("T", "OpenWithName ", true)
MapWinCmd("e", " e ", true)
MapWinCmd("w", "Scratch")
MapWinCmd("b", "Buffers")
MapWinCmd("f", "Files")
MapWinCmd("F", "Files ", true)
MapWinCmd("r", "Rg")
MapWinCmd("R", "Rg ", true)
MapWinCmd("s", "Startify")
MapWinCmd("d", "e ~/.todo")

vim.keymap.set("n", "<leader>d", vim.lsp.buf.definition, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>D", vim.lsp.buf.declaration, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>i", vim.lsp.buf.implementation, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>t", vim.lsp.buf.type_definition, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>u", vim.lsp.buf.references, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>rn", vim.lsp.buf.rename, { noremap = true, silent = true })
vim.keymap.set(
  { "n", "x" },
  "<leader>C",
  vim.lsp.buf.code_action,
  { noremap = true, silent = true }
)
vim.keymap.set("n", "<leader>K", vim.lsp.buf.signature_help, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>N", vim.diagnostic.open_float, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>p", function()
  vim.diagnostic.jump({ count = -1, float = true })
end, { noremap = true, silent = true })
vim.keymap.set("n", "<leader>n", function()
  vim.diagnostic.jump({ count = 1, float = true })
end, { noremap = true, silent = true })
